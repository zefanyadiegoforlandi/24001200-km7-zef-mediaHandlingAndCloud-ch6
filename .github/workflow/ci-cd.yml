name: Node.js Docker CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build Docker image for testing
        run: docker build . --file Dockerfile --tag my-dockerhub-username/express-artwork:test

      - name: Run tests in Docker container
        run: |
          docker run --rm my-dockerhub-username/express-artwork:test npm test

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        run: |
          docker build . --file Dockerfile --tag my-dockerhub-username/express-artwork:latest
          docker push my-dockerhub-username/express-artwork:latest

  deploy:
  needs: publish
  runs-on: ubuntu-latest
  steps:
    - name: SSH to Server and Deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Pull the latest image from Docker Hub
          docker pull my-dockerhub-username/express-artwork:latest

          # Navigate to the project directory with docker-compose.yml on server
          cd /var/www/html/binar/24001200-km7-zef-mediahandlingandgcp-ch6/24001200-km7-zef-mediahandlingandgcp-ch6

          # Re-create and start containers with the new image
          docker-compose down
          docker-compose up -d --build

